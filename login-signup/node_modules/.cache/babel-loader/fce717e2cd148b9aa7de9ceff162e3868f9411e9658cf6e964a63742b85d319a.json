{"ast":null,"code":"import axios from 'axios';\nimport Cookies from 'js-cookie';\naxios.defaults.withCredentials = true;\n\n// include the CSRF token on mutating requests\n// (Django will set a 'csrftoken' cookie on your first GET)\n//axios.defaults.headers.common['X-CSRFToken'] = Cookies.get('csrftoken');\n\n// optional: set a base URL so you don’t repeat it everywhere\naxios.defaults.baseURL = process.env.REACT_APP_API_URL || 'http://127.0.0.1:8000';\naxios.interceptors.request.use(config => {\n  const csrftoken = Cookies.get('csrftoken');\n  if (csrftoken) {\n    config.headers['X-CSRFToken'] = csrftoken;\n  }\n  return config;\n});\nexport default axios;","map":{"version":3,"names":["axios","Cookies","defaults","withCredentials","baseURL","process","env","REACT_APP_API_URL","interceptors","request","use","config","csrftoken","get","headers"],"sources":["C:/Users/aymli/Civisight/Civisight/login-signup/src/api.js"],"sourcesContent":["import axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\n\r\naxios.defaults.withCredentials = true;\r\n\r\n// include the CSRF token on mutating requests\r\n// (Django will set a 'csrftoken' cookie on your first GET)\r\n//axios.defaults.headers.common['X-CSRFToken'] = Cookies.get('csrftoken');\r\n\r\n// optional: set a base URL so you don’t repeat it everywhere\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL || 'http://127.0.0.1:8000';\r\n\r\naxios.interceptors.request.use(config => {\r\n  const csrftoken = Cookies.get('csrftoken');\r\n  if (csrftoken) {\r\n    config.headers['X-CSRFToken'] = csrftoken;\r\n  }\r\n  return config;\r\n});\r\n\r\n\r\nexport default axios;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,WAAW;AAE/BD,KAAK,CAACE,QAAQ,CAACC,eAAe,GAAG,IAAI;;AAErC;AACA;AACA;;AAEA;AACAH,KAAK,CAACE,QAAQ,CAACE,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;AAEjFP,KAAK,CAACQ,YAAY,CAACC,OAAO,CAACC,GAAG,CAACC,MAAM,IAAI;EACvC,MAAMC,SAAS,GAAGX,OAAO,CAACY,GAAG,CAAC,WAAW,CAAC;EAC1C,IAAID,SAAS,EAAE;IACbD,MAAM,CAACG,OAAO,CAAC,aAAa,CAAC,GAAGF,SAAS;EAC3C;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;AAGF,eAAeX,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}